---
swagger: "2.0"
info:
  description: "シネマサンシャインAPI"
  version: "9.0.0"
  title: "sskts-api-mock"
  termsOfService: ""
  contact:
    email: "yamazaki@motionpicture.jp"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "sskts-api-development-mock.azurewebsites.net"
basePath: "/"
tags:
- name: "oauth"
  description: "OAuth認可"
- name: "performance"
  description: "パフォーマンスリソースの操作"
- name: "film"
  description: "作品リソースの操作"
- name: "screen"
  description: "スクリーンリソースの操作"
- name: "theater"
  description: "劇場リソースの操作"
- name: "transaction"
  description: "取引リソースの操作"
- name: "owner"
  description: "会員リソースの操作"
schemes:
- "http"
paths:
  /oauth/token:
    post:
      tags:
      - "oauth"
      summary: "OAuth"
      description: "OAuth認可エンドポイント。アクセストークンを取得します。"
      operationId: "getAccessToken"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "ID"
        required: true
        schema:
          $ref: "#/definitions/data"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Oauth"
  /performances:
    get:
      tags:
      - "performance"
      summary: "パフォーマンス検索"
      description: "条件を指定してパフォーマンスを検索します。"
      operationId: "searchPerformances"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      security:
      - oauth_application:
        - "performances"
        - "performances.read-only"
      x-swagger-router-controller: "Performance"
  /performances/{performanceId}:
    get:
      tags:
      - "performance"
      summary: "パフォーマンス取得"
      description: "IDでパフォーマンス情報を取得します。"
      operationId: "findPerformanceById"
      produces:
      - "application/json"
      parameters:
      - name: "performanceId"
        in: "path"
        description: "パフォーマンスID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Performance"
  /films/{filmId}:
    get:
      tags:
      - "film"
      summary: "作品取得"
      description: "IDで作品情報を取得します。"
      operationId: "findFilmById"
      produces:
      - "application/json"
      parameters:
      - name: "filmId"
        in: "path"
        description: "ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Film"
  /screens/{screenId}:
    get:
      tags:
      - "screen"
      summary: "スクリーン取得"
      description: "IDでスクリーン情報を取得します。"
      operationId: "findScreenById"
      produces:
      - "application/json"
      parameters:
      - name: "screenId"
        in: "path"
        description: "ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Screen"
  /theaters:
    get:
      tags:
      - "theater"
      summary: "劇場検索"
      description: "条件を指定して劇場を検索します。"
      operationId: "findTheatersById"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Theater"
  /theaters/{theaterId}:
    get:
      tags:
      - "theater"
      summary: "劇場取得"
      description: "IDで劇場情報を取得します。"
      operationId: "findTheaterById"
      produces:
      - "application/json"
      parameters:
      - name: "theaterId"
        in: "path"
        description: "ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Theater"
  /owners/me/profile:
    get:
      tags:
      - "owner"
      summary: "会員プロフィール取得"
      description: "ログイン中の会員のプロフィールを取得します。"
      operationId: "findMyProfile"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      security:
      - oauth_password:
        - "owners.profile"
        - "owners.profile.read-only"
      x-swagger-router-controller: "Owner"
    put:
      tags:
      - "owner"
      summary: "会員プロフィール更新"
      description: "ログイン中の会員のプロフィールを更新します。"
      operationId: "updateMyProfile"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "プロフィール"
        required: true
        schema:
          $ref: "#/definitions/data_1"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Owner"
  /owners/me/cards:
    get:
      tags:
      - "owner"
      summary: "会員カード検索"
      description: "ログイン中の会員のカードを検索します。"
      operationId: "findMyCards"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Owner"
    post:
      tags:
      - "owner"
      summary: "会員カード追加"
      description: "ログイン中の会員のカードを作成します。"
      operationId: "createMyCard"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "登録前カード情報"
        required: true
        schema:
          $ref: "#/definitions/data_2"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        201:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_201"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Owner"
  /owners/me/cards/{cardId}:
    delete:
      tags:
      - "owner"
      summary: "会員カード削除"
      description: "ログイン中の会員のカードを削除します。"
      operationId: "deleteMyCard"
      produces:
      - "application/json"
      parameters:
      - name: "cardId"
        in: "path"
        description: "カードID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Owner"
  /owners/me/assets/seatReservation:
    get:
      tags:
      - "owner"
      summary: "会員座席予約資産検索"
      description: "ログイン中の会員の座席予約資産を検索します。"
      operationId: "findMySeatReservationAssets"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_5"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Owner"
  /transactions/startIfPossible:
    post:
      tags:
      - "transaction"
      summary: "取引開始"
      description: "取引を開始します。"
      operationId: "transactions_start"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/data_3"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Transaction"
  /transactions/findByInquiryKey:
    get:
      tags:
      - "transaction"
      summary: "取引照会"
      description: "照会キーで取引を検索します。具体的には、劇場コード&予約番号&電話番号による照会です。"
      operationId: "transactions_findByInquiryKey"
      produces:
      - "application/json"
      parameters:
      - name: "theater_code"
        in: "query"
        description: "劇場コード"
        required: false
        type: "string"
      - name: "reserve_num"
        in: "query"
        description: "予約番号"
        required: false
        type: "integer"
      - name: "tel"
        in: "query"
        description: "電話番号"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Transaction"
  /transactions/makeInquiry:
    post:
      tags:
      - "transaction"
      summary: "取引照会"
      description: "予約番号と電話番号を使用して、取引を照会します。"
      operationId: "transactions_makeInquiry"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "照会キー"
        required: true
        schema:
          $ref: "#/definitions/data_4"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_6"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
        404:
          description: "見つかりませんでした"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      deprecated: true
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/anonymousOwner:
    patch:
      tags:
      - "transaction"
      summary: "取引中匿名所有者更新"
      description: "取引中の匿名所有者のプロフィールを更新します。"
      operationId: "transactions_updateAnonymousOwner"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "プロフィール"
        required: true
        schema:
          $ref: "#/definitions/data_5"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      deprecated: true
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/owners/{ownerId}:
    put:
      tags:
      - "transaction"
      summary: "取引中所有者更新"
      description: "取引中の所有者のプロフィールを更新します。"
      operationId: "transactions_updateOwner"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - name: "ownerId"
        in: "path"
        description: "所有者ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "プロフィール"
        required: true
        schema:
          $ref: "#/definitions/data_6"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/owners/:ownerId/cards:
    post:
      tags:
      - "transaction"
      summary: "取引中所有者カード追加"
      description: "取引中の所有者のカードを作成します。"
      operationId: "transactions_createCard"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "登録前カード情報"
        required: true
        schema:
          $ref: "#/definitions/data_7"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        201:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_201"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/authorizations/gmo:
    post:
      tags:
      - "transaction"
      summary: "GMO承認追加"
      description: "進行中の取引にGMO承認を追加します。"
      operationId: "transactions_createGMOAuthorization"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "GMOオーソリデータ"
        required: true
        schema:
          $ref: "#/definitions/data_8"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/authorizations/coaSeatReservation:
    post:
      tags:
      - "transaction"
      summary: "座席予約承認追加"
      description: "進行中の取引に座席予約承認を追加します。"
      operationId: "transactions_createSeatReservationAuthorization"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "COA仮予約データ"
        required: true
        schema:
          $ref: "#/definitions/data_9"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/authorizations/mvtk:
    post:
      tags:
      - "transaction"
      summary: "ムビチケ承認追加"
      description: "進行中の取引にムビチケ承認を追加します。"
      operationId: "transactions_createMvtkAuthorization"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "ムビチケ着券データ"
        required: true
        schema:
          $ref: "#/definitions/data_10"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/authorizations/{authorizationId}:
    delete:
      tags:
      - "transaction"
      summary: "承認解除"
      description: "進行中の取引から承認を解除します。"
      operationId: "transactions_deleteAuthorization"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - name: "authorizationId"
        in: "path"
        description: "承認ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/inquiryKey:
    put:
      tags:
      - "transaction"
      summary: "取引照会キー作成"
      description: "取引を成立後に照会できるように、照会キーを作成します。"
      operationId: "transactions_createInquiryKey"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "取引照会キー"
        required: true
        schema:
          $ref: "#/definitions/data_11"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/enableInquiry:
    patch:
      tags:
      - "transaction"
      summary: "取引照会キー作成"
      description: "取引を成立後に照会できるように、照会キーを作成します。"
      operationId: "transactions_enableInquiry"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "取引照会キー"
        required: true
        schema:
          $ref: "#/definitions/data_12"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      deprecated: true
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/notifications/email:
    post:
      tags:
      - "transaction"
      summary: "取引通知作成"
      description: "進行中の取引に対して、成立後の通知を作成します。"
      operationId: "transactions_createEmailNotification"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "メール通知データ"
        required: true
        schema:
          $ref: "#/definitions/data_13"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/inline_response_200_8"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/notifications/{notificationId}:
    delete:
      tags:
      - "transaction"
      summary: "取引通知削除"
      description: "進行中の取引から、成立後の通知を削除します。"
      operationId: "transactions_deleteNotification"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - name: "notificationId"
        in: "path"
        description: "通知ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
  /transactions/{transactionId}/close:
    patch:
      tags:
      - "transaction"
      summary: "取引成立"
      description: "取引を成立させます。"
      operationId: "transactions_close"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "取引ID"
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearerトークン"
        required: true
        type: "string"
      responses:
        204:
          description: "レスポンスなし"
        400:
          description: "不適切なリクエスト"
          schema:
            $ref: "#/definitions/inline_response_400"
        401:
          description: "認証が必要"
          schema:
            type: "string"
            enum:
            - "Unauthorized"
        403:
          description: "アクセス権限なし"
          schema:
            type: "string"
            enum:
            - "Forbidden"
      x-swagger-router-controller: "Transaction"
securityDefinitions:
  oauth_password:
    type: "oauth2"
    tokenUrl: "http://sskts-api-development-mock.azurewebsites.net/oauth/token"
    flow: "password"
    scopes:
      owners.profile: "プロフィール書き込み"
      owners.profile.read-only: "プロフィール読み取り"
      owners.cards: "カード書き込み"
      owners.cards.read-only: "カード読み取り"
      owners.assets: "資産書き込み"
      owners.assets.read-only: "資産読み取り"
  oauth_application:
    type: "oauth2"
    tokenUrl: "http://sskts-api-development-mock.azurewebsites.net/oauth/token"
    flow: "application"
    scopes:
      performances: "パフォーマンス書き込み"
      performances.read-only: "パフォーマンス読み取り"
      films: "作品書き込み"
      films.read-only: "作品読み取り"
      screens: "スクリーン書き込み"
      screens.read-only: "スクリーン読み取り"
      transactions: "取引書き込み"
      transactions.read-only: "取引読み取り"
      transactions.owners: "取引所有者書き込み"
      transactions.owners.cards: "取引所有者カード書き込み"
      transactions.authorizations: "取引承認書き込み"
      transactions.notifications: "取引通知書き込み"
definitions:
  Credentials:
    type: "object"
    properties:
      access_token:
        type: "string"
        example: ""
        description: "アクセストークン"
      token_type:
        type: "string"
        example: "Bearer"
        description: "トークンタイプ"
      expires_in:
        type: "integer"
        example: ""
        description: "有効期間(秒)"
    description: "認証情報"
  OwnerProfile:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "owners"
      id:
        type: "string"
      attributes:
        $ref: "#/definitions/inline_response_200_3_data_attributes"
    description: "所有者プロフィール"
  Card:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "cards"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_4_attributes"
    description: "カード情報"
  MultilingualString:
    type: "object"
    properties:
      en:
        type: "string"
        example: "string"
        description: "英語"
      ja:
        type: "string"
        example: "文字列"
        description: "日本語"
    description: "多言語文字列"
  SeatReservationAsset:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "assets"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_5_attributes"
    description: "座席予約資産"
  Transaction:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "transactions"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_6_data_attributes"
    description: "取引"
  TransactionInquiryKey:
    type: "object"
    properties:
      theater_code:
        type: "string"
        example: "118"
        description: "劇場コード"
      reserve_num:
        type: "integer"
        example: 123
        description: "予約番号"
      tel:
        type: "string"
        example: "09012345678"
        description: "電話番号"
    description: "取引照会キー"
  TransactionInquiryKey2:
    type: "object"
    properties:
      inquiry_theater:
        type: "string"
        example: ""
        description: "劇場コード"
      inquiry_id:
        type: "string"
        example: ""
        description: "予約番号"
      inquiry_pass:
        type: "string"
        example: ""
        description: "電話番号"
    description: "取引照会キー"
  Performance:
    type: "object"
    properties:
      day:
        type: "string"
    description: "パフォーマンス"
  GMOAuthorizationAttributes:
    type: "object"
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      gmo_shop_id:
        type: "string"
        example: ""
      gmo_shop_pass:
        type: "string"
        example: ""
      gmo_order_id:
        type: "string"
        example: ""
      gmo_amount:
        type: "string"
        example: ""
      gmo_access_id:
        type: "string"
        example: ""
      gmo_access_pass:
        type: "string"
        example: ""
      gmo_job_cd:
        type: "string"
        example: ""
      gmo_pay_type:
        type: "string"
        example: ""
    description: "GMO承認"
  COASeatReservationAuthorizationAttributes:
    type: "object"
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      coa_tmp_reserve_num:
        type: "integer"
        example: ""
      coa_theater_code:
        type: "string"
        example: ""
      coa_date_jouei:
        type: "string"
        example: ""
      coa_title_code:
        type: "string"
        example: ""
      coa_title_branch_num:
        type: "string"
        example: ""
      coa_time_begin:
        type: "string"
        example: ""
      coa_screen_code:
        type: "string"
        example: ""
      seats:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationscoaSeatReservation_data_attributes_seats"
      price:
        type: "integer"
        example: ""
    description: "COA座席予約承認"
  MvtkAuthorizationAttributes:
    type: "object"
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      price:
        type: "integer"
        example: ""
      kgygish_cd:
        type: "string"
        example: ""
      yyk_dvc_typ:
        type: "string"
        example: ""
      trksh_flg:
        type: "string"
        example: ""
      kgygish_sstm_zskyyk_no:
        type: "string"
        example: ""
      kgygish_usr_zskyyk_no:
        type: "string"
        example: ""
      jei_dt:
        type: "string"
        example: ""
      kij_ymd:
        type: "string"
        example: ""
      st_cd:
        type: "string"
        example: ""
      scren_cd:
        type: "string"
        example: ""
      knyknr_no_info:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes_knyknr_no_info"
      zsk_info:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes_zsk_info"
      skhn_cd:
        type: "string"
        example: ""
    description: "ムビチケ承認"
  EmailNotificationAttributes:
    type: "object"
    properties:
      from:
        type: "string"
        example: "noreply@example.com"
      to:
        type: "string"
        example: "yamazaki@motionpicture.jp"
      subject:
        type: "string"
        example: "件名"
      content:
        type: "string"
        example: "本文"
    description: "メール通知属性"
  data:
    type: "object"
    properties:
      grant_type:
        type: "string"
        description: "認可タイプ"
        enum:
        - "client_credentials"
        - "password"
      scopes:
        type: "array"
        description: "認可タイプ"
        items:
          type: "string"
      client_id:
        type: "string"
        description: "クライアントID"
      state:
        type: "string"
        description: "状態"
      username:
        type: "string"
        description: "ユーザーネーム"
      password:
        type: "string"
        description: "パスワード"
  inline_response_200:
    properties:
      access_token:
        type: "string"
        example: ""
        description: "アクセストークン"
      token_type:
        type: "string"
        example: "Bearer"
        description: "トークンタイプ"
      expires_in:
        type: "integer"
        example: ""
        description: "有効期間(秒)"
    description: "認証情報"
  inline_response_400_source:
    properties:
      parameter:
        type: "string"
  inline_response_400_errors:
    properties:
      title:
        type: "string"
      detail:
        type: "string"
      source:
        $ref: "#/definitions/inline_response_400_source"
  inline_response_400:
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_400_errors"
  inline_response_200_1:
    properties:
      data:
        type: "array"
        items:
          type: "object"
          properties: {}
  inline_response_200_2:
    properties:
      data:
        type: "object"
        properties: {}
  inline_response_200_3_data_attributes:
    properties:
      name_first:
        type: "string"
        example: "てつ"
        description: "名"
      name_last:
        type: "string"
        example: "やまざき"
        description: "姓"
      email:
        type: "string"
        example: "yamazaki@motionpicture.jp"
        description: "メールアドレス"
      tel:
        type: "string"
        example: "09012345678"
        description: "電話番号"
  inline_response_200_3_data:
    properties:
      type:
        type: "string"
        enum:
        - "owners"
      id:
        type: "string"
      attributes:
        $ref: "#/definitions/inline_response_200_3_data_attributes"
    description: "所有者プロフィール"
  inline_response_200_3:
    properties:
      data:
        $ref: "#/definitions/inline_response_200_3_data"
  data_1:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "owners"
      id:
        type: "string"
      attributes:
        $ref: "#/definitions/inline_response_200_3_data_attributes"
    description: "所有者プロフィール"
  inline_response_200_4_attributes:
    properties:
      card_seq:
        type: "string"
        example: "0"
        description: "カード登録連番"
      card_name:
        type: "string"
        example: "Visa"
        description: "カード会社略称"
      card_no:
        type: "string"
        example: "*************111"
        description: "カード番号"
      expire:
        type: "string"
        example: "18/12"
        description: "有効期限"
      holder_name:
        type: "string"
        example: "Tetsu Yamazaki"
        description: "名義人"
  inline_response_200_4_data:
    properties:
      type:
        type: "string"
        enum:
        - "cards"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_4_attributes"
    description: "カード情報"
  inline_response_200_4:
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_4_data"
  ownersmecards_data_attributes:
    properties:
      card_no:
        type: "string"
        description: "カード番号"
      card_pass:
        type: "string"
        description: "パスワード"
      expire:
        type: "string"
        description: "有効期限"
      holder_name:
        type: "string"
        description: "名義人"
      token:
        type: "string"
        description: "トークン化カード情報"
  ownersmecards_data:
    properties:
      type:
        type: "string"
        enum:
        - "cards"
      attributes:
        $ref: "#/definitions/ownersmecards_data_attributes"
  data_2:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ownersmecards_data"
    description: "登録前カード情報"
  inline_response_201:
    properties:
      data:
        $ref: "#/definitions/inline_response_200_4_data"
  inline_response_200_5_attributes_ticket_name:
    properties:
      en:
        type: "string"
        example: "string"
        description: "英語"
      ja:
        type: "string"
        example: "文字列"
        description: "日本語"
    description: "多言語文字列"
  inline_response_200_5_attributes:
    properties:
      performance:
        type: "string"
        example: ""
      screen_section:
        type: "string"
        example: ""
      seat_code:
        type: "string"
        example: ""
      ticket_code:
        type: "string"
        example: ""
      ticket_name:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      ticket_name_kana:
        type: "string"
        example: ""
      std_price:
        type: "integer"
        format: "int64"
        example: ""
      add_price:
        type: "integer"
        format: "int64"
        example: ""
      dis_price:
        type: "integer"
        format: "int64"
        example: ""
      sale_price:
        type: "integer"
        format: "int64"
        example: ""
      add_glasses:
        type: "integer"
        format: "int64"
        example: ""
      mvtk_app_price:
        type: "integer"
        format: "int64"
        example: ""
      kbn_eisyahousiki:
        type: "string"
        example: ""
      mvtk_num:
        type: "string"
        example: ""
      mvtk_kbn_denshiken:
        type: "string"
        example: ""
      mvtk_kbn_maeuriken:
        type: "string"
        example: ""
      mvtk_kbn_kensyu:
        type: "string"
        example: ""
      mvtk_sales_price:
        type: "integer"
        format: "int64"
        example: ""
      theater:
        type: "string"
        example: ""
      screen:
        type: "string"
        example: ""
      film:
        type: "string"
        example: ""
      performance_day:
        type: "string"
        example: ""
      performance_time_start:
        type: "string"
        example: ""
      performance_time_end:
        type: "string"
        example: ""
      theater_name:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      theater_name_kana:
        type: "string"
        example: ""
      theater_address:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      screen_name:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      film_name:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      film_name_kana:
        type: "string"
        example: ""
      film_name_short:
        type: "string"
        example: ""
      film_name_original:
        type: "string"
        example: ""
      film_minutes:
        type: "integer"
        format: "int64"
        example: ""
      film_kbn_eirin:
        type: "string"
        example: ""
      film_kbn_eizou:
        type: "string"
        example: ""
      film_kbn_joueihousiki:
        type: "string"
        example: ""
      film_kbn_jimakufukikae:
        type: "string"
        example: ""
      film_copyright:
        type: "string"
        example: ""
  inline_response_200_5_data:
    properties:
      type:
        type: "string"
        enum:
        - "assets"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_5_attributes"
    description: "座席予約資産"
  inline_response_200_5:
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/inline_response_200_5_data"
  data_3:
    type: "object"
    properties:
      expires_at:
        type: "string"
        example: ""
        description: "取引期限"
  inline_response_200_6_data_attributes_owners:
    properties:
      id:
        type: "string"
        example: ""
      group:
        type: "string"
        example: ""
    description: "取引中所有者リスト"
  inline_response_200_6_data_attributes:
    properties:
      status:
        type: "string"
        description: "取引状態"
        enum:
        - "UNDERWAY"
        - "CLOSED"
        - "EXPIRED"
      owners:
        $ref: "#/definitions/inline_response_200_6_data_attributes_owners"
      expires_at:
        type: "string"
        format: "date-time"
        example: ""
        description: "取引進行期限日時"
      started_at:
        type: "string"
        format: "date-time"
        example: ""
        description: "取引開始日時"
  inline_response_200_6_data:
    properties:
      type:
        type: "string"
        enum:
        - "transactions"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/inline_response_200_6_data_attributes"
    description: "取引"
  inline_response_200_6:
    properties:
      data:
        $ref: "#/definitions/inline_response_200_6_data"
  data_4:
    type: "object"
    properties:
      inquiry_theater:
        type: "string"
        example: ""
        description: "劇場コード"
      inquiry_id:
        type: "string"
        example: ""
        description: "予約番号"
      inquiry_pass:
        type: "string"
        example: ""
        description: "電話番号"
    description: "取引照会キー"
  data_5:
    type: "object"
    properties:
      name_first:
        type: "string"
        example: ""
      name_last:
        type: "string"
        example: ""
      email:
        type: "string"
        example: ""
      tel:
        type: "string"
        example: ""
  transactionstransactionIdownersownerId_data_attributes:
    properties:
      name_first:
        type: "string"
        example: ""
      name_last:
        type: "string"
        example: ""
      email:
        type: "string"
        example: ""
      tel:
        type: "string"
        example: ""
      group:
        type: "string"
        enum:
        - "ANONYMOUS"
        - "MEMBER"
      username:
        type: "string"
        example: ""
      password:
        type: "string"
        example: ""
  transactionstransactionIdownersownerId_data:
    properties:
      type:
        type: "string"
        enum:
        - "owners"
      id:
        type: "string"
        example: ""
      attributes:
        $ref: "#/definitions/transactionstransactionIdownersownerId_data_attributes"
  data_6:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdownersownerId_data"
  data_7:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ownersmecards_data"
    description: "登録前カード情報"
  transactionstransactionIdauthorizationsgmo_data_attributes:
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      gmo_shop_id:
        type: "string"
        example: ""
      gmo_shop_pass:
        type: "string"
        example: ""
      gmo_order_id:
        type: "string"
        example: ""
      gmo_amount:
        type: "string"
        example: ""
      gmo_access_id:
        type: "string"
        example: ""
      gmo_access_pass:
        type: "string"
        example: ""
      gmo_job_cd:
        type: "string"
        example: ""
      gmo_pay_type:
        type: "string"
        example: ""
    description: "GMO承認"
  transactionstransactionIdauthorizationsgmo_data:
    properties:
      type:
        type: "string"
        enum:
        - "authorizations"
      attributes:
        $ref: "#/definitions/transactionstransactionIdauthorizationsgmo_data_attributes"
  data_8:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdauthorizationsgmo_data"
    description: "GMOオーソリデータ"
  inline_response_200_7_data:
    properties:
      type:
        type: "string"
        enum:
        - "authorizations"
      id:
        type: "string"
        example: ""
  inline_response_200_7:
    properties:
      data:
        $ref: "#/definitions/inline_response_200_7_data"
  transactionstransactionIdauthorizationscoaSeatReservation_data_attributes_seats:
    properties:
      performance:
        type: "string"
        example: ""
      screen_section:
        type: "string"
        example: ""
      seat_code:
        type: "string"
        example: ""
      ticket_code:
        type: "string"
        example: ""
      ticket_name:
        $ref: "#/definitions/inline_response_200_5_attributes_ticket_name"
      ticket_name_kana:
        type: "string"
        example: ""
      std_price:
        type: "integer"
        example: ""
      add_price:
        type: "integer"
        example: ""
      dis_price:
        type: "integer"
        example: ""
      sale_price:
        type: "integer"
        example: ""
      mvtk_app_price:
        type: "integer"
        example: ""
      add_glasses:
        type: "integer"
        example: ""
      kbn_eisyahousiki:
        type: "string"
        example: ""
      mvtk_num:
        type: "string"
        example: ""
      mvtk_kbn_denshiken:
        type: "string"
        example: ""
      mvtk_kbn_maeuriken:
        type: "string"
        example: ""
      mvtk_kbn_kensyu:
        type: "string"
        example: ""
      mvtk_sales_price:
        type: "integer"
        example: ""
  transactionstransactionIdauthorizationscoaSeatReservation_data_attributes:
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      coa_tmp_reserve_num:
        type: "integer"
        example: ""
      coa_theater_code:
        type: "string"
        example: ""
      coa_date_jouei:
        type: "string"
        example: ""
      coa_title_code:
        type: "string"
        example: ""
      coa_title_branch_num:
        type: "string"
        example: ""
      coa_time_begin:
        type: "string"
        example: ""
      coa_screen_code:
        type: "string"
        example: ""
      seats:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationscoaSeatReservation_data_attributes_seats"
      price:
        type: "integer"
        example: ""
    description: "COA座席予約承認"
  transactionstransactionIdauthorizationscoaSeatReservation_data:
    properties:
      type:
        type: "string"
        enum:
        - "authorizations"
      attributes:
        $ref: "#/definitions/transactionstransactionIdauthorizationscoaSeatReservation_data_attributes"
  data_9:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdauthorizationscoaSeatReservation_data"
    description: "COA仮予約データ"
  transactionstransactionIdauthorizationsmvtk_data_attributes_knsh_info:
    properties:
      knsh_typ:
        type: "string"
        example: ""
      mi_num:
        type: "string"
        example: ""
  transactionstransactionIdauthorizationsmvtk_data_attributes_knyknr_no_info:
    properties:
      knyknr_no:
        type: "string"
        example: ""
      pin_cd:
        type: "string"
        example: ""
      knsh_info:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes_knsh_info"
  transactionstransactionIdauthorizationsmvtk_data_attributes_zsk_info:
    properties:
      zsk_cd:
        type: "string"
        example: ""
  transactionstransactionIdauthorizationsmvtk_data_attributes:
    properties:
      owner_from:
        type: "string"
        example: ""
      owner_to:
        type: "string"
        example: ""
      price:
        type: "integer"
        example: ""
      kgygish_cd:
        type: "string"
        example: ""
      yyk_dvc_typ:
        type: "string"
        example: ""
      trksh_flg:
        type: "string"
        example: ""
      kgygish_sstm_zskyyk_no:
        type: "string"
        example: ""
      kgygish_usr_zskyyk_no:
        type: "string"
        example: ""
      jei_dt:
        type: "string"
        example: ""
      kij_ymd:
        type: "string"
        example: ""
      st_cd:
        type: "string"
        example: ""
      scren_cd:
        type: "string"
        example: ""
      knyknr_no_info:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes_knyknr_no_info"
      zsk_info:
        type: "array"
        items:
          $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes_zsk_info"
      skhn_cd:
        type: "string"
        example: ""
    description: "ムビチケ承認"
  transactionstransactionIdauthorizationsmvtk_data:
    properties:
      type:
        type: "string"
        enum:
        - "authorizations"
      attributes:
        $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data_attributes"
  data_10:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdauthorizationsmvtk_data"
    description: "COA仮予約データ"
  transactionstransactionIdinquiryKey_data:
    properties:
      theater_code:
        type: "string"
        example: "118"
        description: "劇場コード"
      reserve_num:
        type: "integer"
        example: 123
        description: "予約番号"
      tel:
        type: "string"
        example: "09012345678"
        description: "電話番号"
    description: "取引照会キー"
  data_11:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdinquiryKey_data"
  data_12:
    type: "object"
    properties:
      inquiry_theater:
        type: "string"
        example: ""
        description: "劇場コード"
      inquiry_id:
        type: "string"
        example: ""
        description: "予約番号"
      inquiry_pass:
        type: "string"
        example: ""
        description: "電話番号"
    description: "取引照会キー"
  transactionstransactionIdnotificationsemail_data_attributes:
    properties:
      from:
        type: "string"
        example: "noreply@example.com"
      to:
        type: "string"
        example: "yamazaki@motionpicture.jp"
      subject:
        type: "string"
        example: "件名"
      content:
        type: "string"
        example: "本文"
    description: "メール通知属性"
  transactionstransactionIdnotificationsemail_data:
    properties:
      type:
        type: "string"
        enum:
        - "notifications"
      attributes:
        $ref: "#/definitions/transactionstransactionIdnotificationsemail_data_attributes"
  data_13:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/transactionstransactionIdnotificationsemail_data"
    description: "メール通知データ"
  inline_response_200_8_data:
    properties:
      type:
        type: "string"
        enum:
        - "notifications"
      id:
        type: "string"
        example: ""
  inline_response_200_8:
    properties:
      data:
        $ref: "#/definitions/inline_response_200_8_data"
parameters:
  AuthorizationHeader:
    name: "Authorization"
    in: "header"
    description: "Bearerトークン"
    required: true
    type: "string"
  PresavedCard:
    in: "body"
    name: "data"
    description: "登録前カード情報"
    required: true
    schema:
      type: "object"
      properties:
        data:
          type: "object"
          properties:
            type:
              type: "string"
              enum:
              - "cards"
            attributes:
              type: "object"
              properties:
                card_no:
                  type: "string"
                  description: "カード番号"
                card_pass:
                  type: "string"
                  description: "パスワード"
                expire:
                  type: "string"
                  description: "有効期限"
                holder_name:
                  type: "string"
                  description: "名義人"
                token:
                  type: "string"
                  description: "トークン化カード情報"
      description: "登録前カード情報"
responses:
  OK:
    description: "ok"
    schema:
      type: "object"
      properties:
        data:
          type: "object"
          properties: {}
  NoContent:
    description: "レスポンスなし"
  BadRequest:
    description: "不適切なリクエスト"
    schema:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              title:
                type: "string"
              detail:
                type: "string"
              source:
                type: "object"
                properties:
                  parameter:
                    type: "string"
  Unauthorized:
    description: "認証が必要"
    schema:
      type: "string"
      enum:
      - "Unauthorized"
  Forbidden:
    description: "アクセス権限なし"
    schema:
      type: "string"
      enum:
      - "Forbidden"
  NotFound:
    description: "見つかりませんでした"
    schema:
      type: "object"
      properties:
        data:
          type: "object"
          properties: {}
